name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Delete existing release for tag
        run: |
          gh release delete ${{ github.ref_name }} --cleanup-tags --yes || echo "No existing release to delete"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref }}
          body: |-
            Release of version ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Get Server JAR Path
        id: get_server_jar_path
        run: |
          echo "path=$(ls server/build/libs/*.jar | head -n 1)" >> $GITHUB_OUTPUT
          echo "Server JAR path: $(ls server/build/libs/*.jar | head -n 1)"

      - name: Upload Server JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_server_jar_path.outputs.path }}
          asset_name: chunked-upload-server.jar
          asset_content_type: application/java-archive

      - name: Get Client JAR Path
        id: get_client_jar_path
        run: |
          echo "path=$(ls client/build/libs/*.jar | head -n 1)" >> $GITHUB_OUTPUT
          echo "Client JAR path: $(ls client/build/libs/*.jar | head -n 1)"

      - name: Upload Client JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_client_jar_path.outputs.path }}
          asset_name: chunked-upload-client.jar
          asset_content_type: application/java-archive
